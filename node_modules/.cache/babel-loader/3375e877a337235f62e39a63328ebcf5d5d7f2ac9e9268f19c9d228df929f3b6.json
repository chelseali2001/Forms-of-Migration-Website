{"ast":null,"code":"import { Base64 } from 'js-base64';\nimport md5 from 'md5';\nimport { hasProtocol, parseURL, getQuery } from 'ufo';\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\n// package version used in the ix-lib parameter\nvar VERSION = '3.8.0';\n// regex pattern used to determine if a domain is valid\nvar DOMAIN_REGEX = /^(?:[a-z\\d\\-_]{1,62}\\.){0,125}(?:[a-z\\d](?:\\-(?=\\-*[a-z\\d])|[a-z]|\\d){0,62}\\.)[a-z\\d]{1,63}$/i;\n// minimum generated srcset width\nvar MIN_SRCSET_WIDTH = 100;\n// maximum generated srcset width\nvar MAX_SRCSET_WIDTH = 8192;\n// default tolerable percent difference between srcset pair widths\nvar DEFAULT_SRCSET_WIDTH_TOLERANCE = 0.08;\n\n// default quality parameter values mapped by each dpr srcset entry\nvar DPR_QUALITIES = {\n  1: 75,\n  2: 50,\n  3: 35,\n  4: 23,\n  5: 20\n};\nvar DEFAULT_DPR = [1, 2, 3, 4, 5];\nvar DEFAULT_OPTIONS = {\n  domain: null,\n  useHTTPS: true,\n  includeLibraryParam: true,\n  urlPrefix: 'https://',\n  secureURLToken: null\n};\n\n/**\n * `extractUrl()` extracts URL components from a source URL string.\n * It does this by matching the URL against regular expressions. The irrelevant\n * (entire URL) matches are removed and the rest stored as their corresponding\n * URL components.\n *\n * `url` can be a partial, full URL, or full proxy URL. `useHttps` boolean\n * defaults to false.\n *\n * @returns {Object} `{ protocol, auth, host, pathname, search, hash }`\n * extracted from the URL.\n */\nfunction extractUrl(_ref) {\n  var _ref$url = _ref.url,\n    url = _ref$url === void 0 ? '' : _ref$url,\n    _ref$useHttps = _ref.useHttps,\n    useHttps = _ref$useHttps === void 0 ? false : _ref$useHttps;\n  var defaultProto = useHttps ? 'https://' : 'http://';\n  if (!hasProtocol(url, true)) {\n    return extractUrl({\n      url: defaultProto + url\n    });\n  }\n  /**\n   * Regex are hard to parse. Leaving this breakdown here for reference.\n   * - `protocol`: ([^:/]+:)? - all not `:` or `/` & preceded by `:`, 0-1 times\n   * - `auth`: ([^/@]+@)? - all not `/` or `@` & preceded by `@`, 0-1 times\n   * - `domainAndPath`: (.*) /) -  all except line breaks\n   * - `domain`: `([^/]*)` - all before a `/` token\n   */\n  return parseURL(url);\n}\nfunction validateAndDestructureOptions(options) {\n  var widthTolerance;\n  if (options.widthTolerance !== undefined) {\n    validateWidthTolerance(options.widthTolerance);\n    widthTolerance = options.widthTolerance;\n  } else {\n    widthTolerance = DEFAULT_SRCSET_WIDTH_TOLERANCE;\n  }\n  var minWidth = options.minWidth === undefined ? MIN_SRCSET_WIDTH : options.minWidth;\n  var maxWidth = options.maxWidth === undefined ? MAX_SRCSET_WIDTH : options.maxWidth;\n\n  // Validate the range unless we're using defaults for both\n  if (minWidth != MIN_SRCSET_WIDTH || maxWidth != MAX_SRCSET_WIDTH) {\n    validateRange(minWidth, maxWidth);\n  }\n  return [widthTolerance, minWidth, maxWidth];\n}\nfunction validateRange(min, max) {\n  if (!(Number.isInteger(min) && Number.isInteger(max)) || min <= 0 || max <= 0 || min > max) {\n    throw new Error(\"The min and max srcset widths can only be passed positive Number values, and min must be less than max. Found min: \".concat(min, \" and max: \").concat(max, \".\"));\n  }\n}\nfunction validateWidthTolerance(widthTolerance) {\n  if (typeof widthTolerance != 'number' || widthTolerance < 0.01) {\n    throw new Error('The srcset widthTolerance must be a number greater than or equal to 0.01');\n  }\n}\nfunction validateWidths(customWidths) {\n  if (!Array.isArray(customWidths) || !customWidths.length) {\n    throw new Error('The widths argument can only be passed a valid non-empty array of integers');\n  } else {\n    var allPositiveIntegers = customWidths.every(function (width) {\n      return Number.isInteger(width) && width > 0;\n    });\n    if (!allPositiveIntegers) {\n      throw new Error('A custom widths argument can only contain positive integer values');\n    }\n  }\n}\nfunction validateVariableQuality(disableVariableQuality) {\n  if (typeof disableVariableQuality != 'boolean') {\n    throw new Error('The disableVariableQuality argument can only be passed a Boolean value');\n  }\n}\nfunction validateDevicePixelRatios(devicePixelRatios) {\n  if (!Array.isArray(devicePixelRatios) || !devicePixelRatios.length) {\n    throw new Error('The devicePixelRatios argument can only be passed a valid non-empty array of integers');\n  } else {\n    var allValidDPR = devicePixelRatios.every(function (dpr) {\n      return typeof dpr === 'number' && dpr >= 1 && dpr <= 5;\n    });\n    if (!allValidDPR) {\n      throw new Error('The devicePixelRatios argument can only contain positive integer values between 1 and 5');\n    }\n  }\n}\nfunction validateVariableQualities(variableQualities) {\n  if (_typeof(variableQualities) !== 'object') {\n    throw new Error('The variableQualities argument can only be an object');\n  }\n}\nvar ImgixClient = /*#__PURE__*/function () {\n  function ImgixClient() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ImgixClient);\n    this.settings = _objectSpread2(_objectSpread2({}, DEFAULT_OPTIONS), opts);\n    // a cache to store memoized srcset width-pairs\n    this.targetWidthsCache = {};\n    if (typeof this.settings.domain != 'string') {\n      throw new Error('ImgixClient must be passed a valid string domain');\n    }\n    if (DOMAIN_REGEX.exec(this.settings.domain) == null) {\n      throw new Error('Domain must be passed in as fully-qualified ' + 'domain name and should not include a protocol or any path ' + 'element, i.e. \"example.imgix.net\".');\n    }\n    if (this.settings.includeLibraryParam) {\n      this.settings.libraryParam = 'js-' + ImgixClient.version();\n    }\n    this.settings.urlPrefix = this.settings.useHTTPS ? 'https://' : 'http://';\n  }\n  _createClass(ImgixClient, [{\n    key: \"buildURL\",\n    value: function buildURL() {\n      var rawPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var path = this._sanitizePath(rawPath, options);\n      var finalParams = this._buildParams(params, options);\n      if (!!this.settings.secureURLToken) {\n        finalParams = this._signParams(path, finalParams);\n      }\n      return this.settings.urlPrefix + this.settings.domain + path + finalParams;\n    }\n\n    /**\n     *`_buildURL` static method allows full URLs to be formatted for use with\n     * imgix.\n     *\n     * - If the source URL has included parameters, they are merged with\n     * the `params` passed in as an argument.\n     * - URL must match `{host}/{pathname}?{query}` otherwise an error is thrown.\n     *\n     * @param {String} url - full source URL path string, required\n     * @param {Object} params - imgix params object, optional\n     * @param {Object} options - imgix client options, optional\n     *\n     * @returns URL string formatted to imgix specifications.\n     *\n     * @example\n     * const client = ImgixClient\n     * const params = { w: 100 }\n     * const opts = { useHttps: true }\n     * const src = \"sdk-test.imgix.net/amsterdam.jpg?h=100\"\n     * const url = client._buildURL(src, params, opts)\n     * console.log(url)\n     * // => \"https://sdk-test.imgix.net/amsterdam.jpg?h=100&w=100\"\n     */\n  }, {\n    key: \"_buildParams\",\n    value: function _buildParams() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // If a custom encoder is present, use it\n      // Otherwise just use the encodeURIComponent\n      var useCustomEncoder = !!options.encoder;\n      var customEncoder = options.encoder;\n      var queryParams = [].concat(_toConsumableArray(this.settings.libraryParam ? [\"ixlib=\".concat(this.settings.libraryParam)] : []), _toConsumableArray(Object.entries(params).reduce(function (prev, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n        if (value == null) {\n          return prev;\n        }\n        var encodedKey = useCustomEncoder ? customEncoder(key, value) : encodeURIComponent(key);\n        var encodedValue = key.substr(-2) === '64' ? useCustomEncoder ? customEncoder(value, key) : Base64.encodeURI(value) : useCustomEncoder ? customEncoder(value, key) : encodeURIComponent(value);\n        prev.push(\"\".concat(encodedKey, \"=\").concat(encodedValue));\n        return prev;\n      }, [])));\n      return \"\".concat(queryParams.length > 0 ? '?' : '').concat(queryParams.join('&'));\n    }\n  }, {\n    key: \"_signParams\",\n    value: function _signParams(path, queryParams) {\n      var signatureBase = this.settings.secureURLToken + path + queryParams;\n      var signature = md5(signatureBase);\n      return queryParams.length > 0 ? queryParams + '&s=' + signature : '?s=' + signature;\n    }\n\n    /**\n     * \"Sanitize\" the path of the image URL.\n     * Ensures that the path has a leading slash, and that the path is correctly\n     * encoded. If it's a proxy path (begins with http/https), then encode the\n     * whole path as a URI component, otherwise only encode specific characters.\n     * @param {string} path The URL path of the image\n     * @param {Object} options Sanitization options\n     * @param {boolean} options.encode Whether to encode the path, default true\n     * @returns {string} The sanitized path\n     */\n  }, {\n    key: \"_sanitizePath\",\n    value: function _sanitizePath(path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Strip leading slash first (we'll re-add after encoding)\n      var _path = path.replace(/^\\//, '');\n      if (options.disablePathEncoding) {\n        return '/' + _path;\n      }\n      if (options.encoder) {\n        _path = options.encoder(_path);\n      } else if (/^https?:\\/\\//.test(_path)) {\n        // Use de/encodeURIComponent to ensure *all* characters are handled,\n        // since it's being used as a path\n        _path = encodeURIComponent(_path);\n      } else {\n        // Use de/encodeURI if we think the path is just a path,\n        // so it leaves legal characters like '/' and '@' alone\n        _path = encodeURI(_path).replace(/[#?:+]/g, encodeURIComponent);\n      }\n      return '/' + _path;\n    }\n  }, {\n    key: \"buildSrcSet\",\n    value: function buildSrcSet(path) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var w = params.w,\n        h = params.h;\n      if (w || h) {\n        return this._buildDPRSrcSet(path, params, options);\n      } else {\n        return this._buildSrcSetPairs(path, params, options);\n      }\n    }\n\n    /**\n     * _buildSrcSet static method allows full URLs to be used when generating\n     * imgix formatted `srcset` string values.\n     *\n     * - If the source URL has included parameters, they are merged with\n     * the `params` passed in as an argument.\n     * - URL must match `{host}/{pathname}?{query}` otherwise an error is thrown.\n     *\n     * @param {String} url - full source URL path string, required\n     * @param {Object} params - imgix params object, optional\n     * @param {Object} srcsetModifiers - srcset modifiers, optional\n     * @param {Object} clientOptions - imgix client options, optional\n     * @returns imgix `srcset` for full URLs.\n     */\n  }, {\n    key: \"_buildSrcSetPairs\",\n    value: function _buildSrcSetPairs(path) {\n      var _this = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var _validateAndDestructu = validateAndDestructureOptions(options),\n        _validateAndDestructu2 = _slicedToArray(_validateAndDestructu, 3),\n        widthTolerance = _validateAndDestructu2[0],\n        minWidth = _validateAndDestructu2[1],\n        maxWidth = _validateAndDestructu2[2];\n      var targetWidthValues;\n      if (options.widths) {\n        validateWidths(options.widths);\n        targetWidthValues = _toConsumableArray(options.widths);\n      } else {\n        targetWidthValues = ImgixClient.targetWidths(minWidth, maxWidth, widthTolerance, this.targetWidthsCache);\n      }\n      var srcset = targetWidthValues.map(function (w) {\n        return \"\".concat(_this.buildURL(path, _objectSpread2(_objectSpread2({}, params), {}, {\n          w: w\n        }), options), \" \").concat(w, \"w\");\n      });\n      return srcset.join(',\\n');\n    }\n  }, {\n    key: \"_buildDPRSrcSet\",\n    value: function _buildDPRSrcSet(path) {\n      var _this2 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (options.devicePixelRatios) {\n        validateDevicePixelRatios(options.devicePixelRatios);\n      }\n      var targetRatios = options.devicePixelRatios || DEFAULT_DPR;\n      var disableVariableQuality = options.disableVariableQuality || false;\n      if (!disableVariableQuality) {\n        validateVariableQuality(disableVariableQuality);\n      }\n      if (options.variableQualities) {\n        validateVariableQualities(options.variableQualities);\n      }\n      var qualities = _objectSpread2(_objectSpread2({}, DPR_QUALITIES), options.variableQualities);\n      var withQuality = function withQuality(path, params, dpr) {\n        return \"\".concat(_this2.buildURL(path, _objectSpread2(_objectSpread2({}, params), {}, {\n          dpr: dpr,\n          q: params.q || qualities[dpr] || qualities[Math.floor(dpr)]\n        }), options), \" \").concat(dpr, \"x\");\n      };\n      var srcset = disableVariableQuality ? targetRatios.map(function (dpr) {\n        return \"\".concat(_this2.buildURL(path, _objectSpread2(_objectSpread2({}, params), {}, {\n          dpr: dpr\n        }), options), \" \").concat(dpr, \"x\");\n      }) : targetRatios.map(function (dpr) {\n        return withQuality(path, params, dpr);\n      });\n      return srcset.join(',\\n');\n    }\n  }], [{\n    key: \"version\",\n    value: function version() {\n      return VERSION;\n    }\n  }, {\n    key: \"_buildURL\",\n    value: function _buildURL(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (url == null) {\n        return '';\n      }\n      var _extractUrl = extractUrl({\n          url: url,\n          useHTTPS: options.useHTTPS\n        }),\n        host = _extractUrl.host,\n        pathname = _extractUrl.pathname,\n        search = _extractUrl.search;\n      // merge source URL parameters with options parameters\n      var combinedParams = _objectSpread2(_objectSpread2({}, getQuery(search)), params);\n\n      // throw error if no host or no pathname present\n      if (!host.length || !pathname.length) {\n        throw new Error('_buildURL: URL must match {host}/{pathname}?{query}');\n      }\n      var client = new ImgixClient(_objectSpread2({\n        domain: host\n      }, options));\n      return client.buildURL(pathname, combinedParams);\n    }\n  }, {\n    key: \"_buildSrcSet\",\n    value: function _buildSrcSet(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var srcsetModifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var clientOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (url == null) {\n        return '';\n      }\n      var _extractUrl2 = extractUrl({\n          url: url,\n          useHTTPS: clientOptions.useHTTPS\n        }),\n        host = _extractUrl2.host,\n        pathname = _extractUrl2.pathname,\n        search = _extractUrl2.search;\n      // merge source URL parameters with options parameters\n      var combinedParams = _objectSpread2(_objectSpread2({}, getQuery(search)), params);\n\n      // throw error if no host or no pathname present\n      if (!host.length || !pathname.length) {\n        throw new Error('_buildOneStepURL: URL must match {host}/{pathname}?{query}');\n      }\n      var client = new ImgixClient(_objectSpread2({\n        domain: host\n      }, clientOptions));\n      return client.buildSrcSet(pathname, combinedParams, srcsetModifiers);\n    }\n\n    // returns an array of width values used during srcset generation\n  }, {\n    key: \"targetWidths\",\n    value: function targetWidths() {\n      var minWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      var maxWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8192;\n      var widthTolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.08;\n      var cache = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var minW = Math.floor(minWidth);\n      var maxW = Math.floor(maxWidth);\n      validateRange(minWidth, maxWidth);\n      validateWidthTolerance(widthTolerance);\n      var cacheKey = widthTolerance + '/' + minW + '/' + maxW;\n\n      // First, check the cache.\n      if (cacheKey in cache) {\n        return cache[cacheKey];\n      }\n      if (minW === maxW) {\n        return [minW];\n      }\n      var resolutions = [];\n      var currentWidth = minW;\n      while (currentWidth < maxW) {\n        // While the currentWidth is less than the maxW, push the rounded\n        // width onto the list of resolutions.\n        resolutions.push(Math.round(currentWidth));\n        currentWidth *= 1 + widthTolerance * 2;\n      }\n\n      // At this point, the last width in resolutions is less than the\n      // currentWidth that caused the loop to terminate. This terminating\n      // currentWidth is greater than or equal to the maxW. We want to\n      // to stop at maxW, so we make sure our maxW is larger than the last\n      // width in resolutions before pushing it (if it's equal we're done).\n      if (resolutions[resolutions.length - 1] < maxW) {\n        resolutions.push(maxW);\n      }\n      cache[cacheKey] = resolutions;\n      return resolutions;\n    }\n  }]);\n  return ImgixClient;\n}();\nexport { ImgixClient as default };","map":{"version":3,"names":["Base64","md5","hasProtocol","parseURL","getQuery","_iterableToArrayLimit","arr","i","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","return","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","_slicedToArray","_arrayWithHoles","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","slice","name","test","len","arr2","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","String","Number","arg","VERSION","DOMAIN_REGEX","MIN_SRCSET_WIDTH","MAX_SRCSET_WIDTH","DEFAULT_SRCSET_WIDTH_TOLERANCE","DPR_QUALITIES","DEFAULT_DPR","DEFAULT_OPTIONS","domain","useHTTPS","includeLibraryParam","urlPrefix","secureURLToken","extractUrl","_ref","_ref$url","url","_ref$useHttps","useHttps","defaultProto","validateAndDestructureOptions","options","widthTolerance","validateWidthTolerance","minWidth","maxWidth","validateRange","min","max","isInteger","Error","concat","validateWidths","customWidths","allPositiveIntegers","every","width","validateVariableQuality","disableVariableQuality","validateDevicePixelRatios","devicePixelRatios","allValidDPR","dpr","validateVariableQualities","variableQualities","ImgixClient","opts","settings","targetWidthsCache","exec","libraryParam","version","buildURL","rawPath","params","path","_sanitizePath","finalParams","_buildParams","_signParams","useCustomEncoder","encoder","customEncoder","queryParams","entries","reduce","prev","_ref2","encodedKey","encodeURIComponent","encodedValue","substr","encodeURI","join","signatureBase","signature","_path","replace","disablePathEncoding","buildSrcSet","w","h","_buildDPRSrcSet","_buildSrcSetPairs","_this","_validateAndDestructu","_validateAndDestructu2","targetWidthValues","widths","targetWidths","srcset","map","_this2","targetRatios","qualities","withQuality","q","Math","floor","_buildURL","_extractUrl","host","pathname","search","combinedParams","client","_buildSrcSet","srcsetModifiers","clientOptions","_extractUrl2","cache","minW","maxW","cacheKey","resolutions","currentWidth","round","default"],"sources":["C:/Users/chels/CS494/Forms-of-Migration-Website/node_modules/@imgix/js-core/dist/index.esm.js"],"sourcesContent":["import { Base64 } from 'js-base64';\nimport md5 from 'md5';\nimport { hasProtocol, parseURL, getQuery } from 'ufo';\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\n// package version used in the ix-lib parameter\nvar VERSION = '3.8.0';\n// regex pattern used to determine if a domain is valid\nvar DOMAIN_REGEX = /^(?:[a-z\\d\\-_]{1,62}\\.){0,125}(?:[a-z\\d](?:\\-(?=\\-*[a-z\\d])|[a-z]|\\d){0,62}\\.)[a-z\\d]{1,63}$/i;\n// minimum generated srcset width\nvar MIN_SRCSET_WIDTH = 100;\n// maximum generated srcset width\nvar MAX_SRCSET_WIDTH = 8192;\n// default tolerable percent difference between srcset pair widths\nvar DEFAULT_SRCSET_WIDTH_TOLERANCE = 0.08;\n\n// default quality parameter values mapped by each dpr srcset entry\nvar DPR_QUALITIES = {\n  1: 75,\n  2: 50,\n  3: 35,\n  4: 23,\n  5: 20\n};\nvar DEFAULT_DPR = [1, 2, 3, 4, 5];\nvar DEFAULT_OPTIONS = {\n  domain: null,\n  useHTTPS: true,\n  includeLibraryParam: true,\n  urlPrefix: 'https://',\n  secureURLToken: null\n};\n\n/**\n * `extractUrl()` extracts URL components from a source URL string.\n * It does this by matching the URL against regular expressions. The irrelevant\n * (entire URL) matches are removed and the rest stored as their corresponding\n * URL components.\n *\n * `url` can be a partial, full URL, or full proxy URL. `useHttps` boolean\n * defaults to false.\n *\n * @returns {Object} `{ protocol, auth, host, pathname, search, hash }`\n * extracted from the URL.\n */\nfunction extractUrl(_ref) {\n  var _ref$url = _ref.url,\n    url = _ref$url === void 0 ? '' : _ref$url,\n    _ref$useHttps = _ref.useHttps,\n    useHttps = _ref$useHttps === void 0 ? false : _ref$useHttps;\n  var defaultProto = useHttps ? 'https://' : 'http://';\n  if (!hasProtocol(url, true)) {\n    return extractUrl({\n      url: defaultProto + url\n    });\n  }\n  /**\n   * Regex are hard to parse. Leaving this breakdown here for reference.\n   * - `protocol`: ([^:/]+:)? - all not `:` or `/` & preceded by `:`, 0-1 times\n   * - `auth`: ([^/@]+@)? - all not `/` or `@` & preceded by `@`, 0-1 times\n   * - `domainAndPath`: (.*) /) -  all except line breaks\n   * - `domain`: `([^/]*)` - all before a `/` token\n   */\n  return parseURL(url);\n}\n\nfunction validateAndDestructureOptions(options) {\n  var widthTolerance;\n  if (options.widthTolerance !== undefined) {\n    validateWidthTolerance(options.widthTolerance);\n    widthTolerance = options.widthTolerance;\n  } else {\n    widthTolerance = DEFAULT_SRCSET_WIDTH_TOLERANCE;\n  }\n  var minWidth = options.minWidth === undefined ? MIN_SRCSET_WIDTH : options.minWidth;\n  var maxWidth = options.maxWidth === undefined ? MAX_SRCSET_WIDTH : options.maxWidth;\n\n  // Validate the range unless we're using defaults for both\n  if (minWidth != MIN_SRCSET_WIDTH || maxWidth != MAX_SRCSET_WIDTH) {\n    validateRange(minWidth, maxWidth);\n  }\n  return [widthTolerance, minWidth, maxWidth];\n}\nfunction validateRange(min, max) {\n  if (!(Number.isInteger(min) && Number.isInteger(max)) || min <= 0 || max <= 0 || min > max) {\n    throw new Error(\"The min and max srcset widths can only be passed positive Number values, and min must be less than max. Found min: \".concat(min, \" and max: \").concat(max, \".\"));\n  }\n}\nfunction validateWidthTolerance(widthTolerance) {\n  if (typeof widthTolerance != 'number' || widthTolerance < 0.01) {\n    throw new Error('The srcset widthTolerance must be a number greater than or equal to 0.01');\n  }\n}\nfunction validateWidths(customWidths) {\n  if (!Array.isArray(customWidths) || !customWidths.length) {\n    throw new Error('The widths argument can only be passed a valid non-empty array of integers');\n  } else {\n    var allPositiveIntegers = customWidths.every(function (width) {\n      return Number.isInteger(width) && width > 0;\n    });\n    if (!allPositiveIntegers) {\n      throw new Error('A custom widths argument can only contain positive integer values');\n    }\n  }\n}\nfunction validateVariableQuality(disableVariableQuality) {\n  if (typeof disableVariableQuality != 'boolean') {\n    throw new Error('The disableVariableQuality argument can only be passed a Boolean value');\n  }\n}\nfunction validateDevicePixelRatios(devicePixelRatios) {\n  if (!Array.isArray(devicePixelRatios) || !devicePixelRatios.length) {\n    throw new Error('The devicePixelRatios argument can only be passed a valid non-empty array of integers');\n  } else {\n    var allValidDPR = devicePixelRatios.every(function (dpr) {\n      return typeof dpr === 'number' && dpr >= 1 && dpr <= 5;\n    });\n    if (!allValidDPR) {\n      throw new Error('The devicePixelRatios argument can only contain positive integer values between 1 and 5');\n    }\n  }\n}\nfunction validateVariableQualities(variableQualities) {\n  if (_typeof(variableQualities) !== 'object') {\n    throw new Error('The variableQualities argument can only be an object');\n  }\n}\n\nvar ImgixClient = /*#__PURE__*/function () {\n  function ImgixClient() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ImgixClient);\n    this.settings = _objectSpread2(_objectSpread2({}, DEFAULT_OPTIONS), opts);\n    // a cache to store memoized srcset width-pairs\n    this.targetWidthsCache = {};\n    if (typeof this.settings.domain != 'string') {\n      throw new Error('ImgixClient must be passed a valid string domain');\n    }\n    if (DOMAIN_REGEX.exec(this.settings.domain) == null) {\n      throw new Error('Domain must be passed in as fully-qualified ' + 'domain name and should not include a protocol or any path ' + 'element, i.e. \"example.imgix.net\".');\n    }\n    if (this.settings.includeLibraryParam) {\n      this.settings.libraryParam = 'js-' + ImgixClient.version();\n    }\n    this.settings.urlPrefix = this.settings.useHTTPS ? 'https://' : 'http://';\n  }\n  _createClass(ImgixClient, [{\n    key: \"buildURL\",\n    value: function buildURL() {\n      var rawPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var path = this._sanitizePath(rawPath, options);\n      var finalParams = this._buildParams(params, options);\n      if (!!this.settings.secureURLToken) {\n        finalParams = this._signParams(path, finalParams);\n      }\n      return this.settings.urlPrefix + this.settings.domain + path + finalParams;\n    }\n\n    /**\n     *`_buildURL` static method allows full URLs to be formatted for use with\n     * imgix.\n     *\n     * - If the source URL has included parameters, they are merged with\n     * the `params` passed in as an argument.\n     * - URL must match `{host}/{pathname}?{query}` otherwise an error is thrown.\n     *\n     * @param {String} url - full source URL path string, required\n     * @param {Object} params - imgix params object, optional\n     * @param {Object} options - imgix client options, optional\n     *\n     * @returns URL string formatted to imgix specifications.\n     *\n     * @example\n     * const client = ImgixClient\n     * const params = { w: 100 }\n     * const opts = { useHttps: true }\n     * const src = \"sdk-test.imgix.net/amsterdam.jpg?h=100\"\n     * const url = client._buildURL(src, params, opts)\n     * console.log(url)\n     * // => \"https://sdk-test.imgix.net/amsterdam.jpg?h=100&w=100\"\n     */\n  }, {\n    key: \"_buildParams\",\n    value: function _buildParams() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // If a custom encoder is present, use it\n      // Otherwise just use the encodeURIComponent\n      var useCustomEncoder = !!options.encoder;\n      var customEncoder = options.encoder;\n      var queryParams = [].concat(_toConsumableArray(this.settings.libraryParam ? [\"ixlib=\".concat(this.settings.libraryParam)] : []), _toConsumableArray(Object.entries(params).reduce(function (prev, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n        if (value == null) {\n          return prev;\n        }\n        var encodedKey = useCustomEncoder ? customEncoder(key, value) : encodeURIComponent(key);\n        var encodedValue = key.substr(-2) === '64' ? useCustomEncoder ? customEncoder(value, key) : Base64.encodeURI(value) : useCustomEncoder ? customEncoder(value, key) : encodeURIComponent(value);\n        prev.push(\"\".concat(encodedKey, \"=\").concat(encodedValue));\n        return prev;\n      }, [])));\n      return \"\".concat(queryParams.length > 0 ? '?' : '').concat(queryParams.join('&'));\n    }\n  }, {\n    key: \"_signParams\",\n    value: function _signParams(path, queryParams) {\n      var signatureBase = this.settings.secureURLToken + path + queryParams;\n      var signature = md5(signatureBase);\n      return queryParams.length > 0 ? queryParams + '&s=' + signature : '?s=' + signature;\n    }\n\n    /**\n     * \"Sanitize\" the path of the image URL.\n     * Ensures that the path has a leading slash, and that the path is correctly\n     * encoded. If it's a proxy path (begins with http/https), then encode the\n     * whole path as a URI component, otherwise only encode specific characters.\n     * @param {string} path The URL path of the image\n     * @param {Object} options Sanitization options\n     * @param {boolean} options.encode Whether to encode the path, default true\n     * @returns {string} The sanitized path\n     */\n  }, {\n    key: \"_sanitizePath\",\n    value: function _sanitizePath(path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Strip leading slash first (we'll re-add after encoding)\n      var _path = path.replace(/^\\//, '');\n      if (options.disablePathEncoding) {\n        return '/' + _path;\n      }\n      if (options.encoder) {\n        _path = options.encoder(_path);\n      } else if (/^https?:\\/\\//.test(_path)) {\n        // Use de/encodeURIComponent to ensure *all* characters are handled,\n        // since it's being used as a path\n        _path = encodeURIComponent(_path);\n      } else {\n        // Use de/encodeURI if we think the path is just a path,\n        // so it leaves legal characters like '/' and '@' alone\n        _path = encodeURI(_path).replace(/[#?:+]/g, encodeURIComponent);\n      }\n      return '/' + _path;\n    }\n  }, {\n    key: \"buildSrcSet\",\n    value: function buildSrcSet(path) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var w = params.w,\n        h = params.h;\n      if (w || h) {\n        return this._buildDPRSrcSet(path, params, options);\n      } else {\n        return this._buildSrcSetPairs(path, params, options);\n      }\n    }\n\n    /**\n     * _buildSrcSet static method allows full URLs to be used when generating\n     * imgix formatted `srcset` string values.\n     *\n     * - If the source URL has included parameters, they are merged with\n     * the `params` passed in as an argument.\n     * - URL must match `{host}/{pathname}?{query}` otherwise an error is thrown.\n     *\n     * @param {String} url - full source URL path string, required\n     * @param {Object} params - imgix params object, optional\n     * @param {Object} srcsetModifiers - srcset modifiers, optional\n     * @param {Object} clientOptions - imgix client options, optional\n     * @returns imgix `srcset` for full URLs.\n     */\n  }, {\n    key: \"_buildSrcSetPairs\",\n    value: function _buildSrcSetPairs(path) {\n      var _this = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var _validateAndDestructu = validateAndDestructureOptions(options),\n        _validateAndDestructu2 = _slicedToArray(_validateAndDestructu, 3),\n        widthTolerance = _validateAndDestructu2[0],\n        minWidth = _validateAndDestructu2[1],\n        maxWidth = _validateAndDestructu2[2];\n      var targetWidthValues;\n      if (options.widths) {\n        validateWidths(options.widths);\n        targetWidthValues = _toConsumableArray(options.widths);\n      } else {\n        targetWidthValues = ImgixClient.targetWidths(minWidth, maxWidth, widthTolerance, this.targetWidthsCache);\n      }\n      var srcset = targetWidthValues.map(function (w) {\n        return \"\".concat(_this.buildURL(path, _objectSpread2(_objectSpread2({}, params), {}, {\n          w: w\n        }), options), \" \").concat(w, \"w\");\n      });\n      return srcset.join(',\\n');\n    }\n  }, {\n    key: \"_buildDPRSrcSet\",\n    value: function _buildDPRSrcSet(path) {\n      var _this2 = this;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (options.devicePixelRatios) {\n        validateDevicePixelRatios(options.devicePixelRatios);\n      }\n      var targetRatios = options.devicePixelRatios || DEFAULT_DPR;\n      var disableVariableQuality = options.disableVariableQuality || false;\n      if (!disableVariableQuality) {\n        validateVariableQuality(disableVariableQuality);\n      }\n      if (options.variableQualities) {\n        validateVariableQualities(options.variableQualities);\n      }\n      var qualities = _objectSpread2(_objectSpread2({}, DPR_QUALITIES), options.variableQualities);\n      var withQuality = function withQuality(path, params, dpr) {\n        return \"\".concat(_this2.buildURL(path, _objectSpread2(_objectSpread2({}, params), {}, {\n          dpr: dpr,\n          q: params.q || qualities[dpr] || qualities[Math.floor(dpr)]\n        }), options), \" \").concat(dpr, \"x\");\n      };\n      var srcset = disableVariableQuality ? targetRatios.map(function (dpr) {\n        return \"\".concat(_this2.buildURL(path, _objectSpread2(_objectSpread2({}, params), {}, {\n          dpr: dpr\n        }), options), \" \").concat(dpr, \"x\");\n      }) : targetRatios.map(function (dpr) {\n        return withQuality(path, params, dpr);\n      });\n      return srcset.join(',\\n');\n    }\n  }], [{\n    key: \"version\",\n    value: function version() {\n      return VERSION;\n    }\n  }, {\n    key: \"_buildURL\",\n    value: function _buildURL(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (url == null) {\n        return '';\n      }\n      var _extractUrl = extractUrl({\n          url: url,\n          useHTTPS: options.useHTTPS\n        }),\n        host = _extractUrl.host,\n        pathname = _extractUrl.pathname,\n        search = _extractUrl.search;\n      // merge source URL parameters with options parameters\n      var combinedParams = _objectSpread2(_objectSpread2({}, getQuery(search)), params);\n\n      // throw error if no host or no pathname present\n      if (!host.length || !pathname.length) {\n        throw new Error('_buildURL: URL must match {host}/{pathname}?{query}');\n      }\n      var client = new ImgixClient(_objectSpread2({\n        domain: host\n      }, options));\n      return client.buildURL(pathname, combinedParams);\n    }\n  }, {\n    key: \"_buildSrcSet\",\n    value: function _buildSrcSet(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var srcsetModifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var clientOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (url == null) {\n        return '';\n      }\n      var _extractUrl2 = extractUrl({\n          url: url,\n          useHTTPS: clientOptions.useHTTPS\n        }),\n        host = _extractUrl2.host,\n        pathname = _extractUrl2.pathname,\n        search = _extractUrl2.search;\n      // merge source URL parameters with options parameters\n      var combinedParams = _objectSpread2(_objectSpread2({}, getQuery(search)), params);\n\n      // throw error if no host or no pathname present\n      if (!host.length || !pathname.length) {\n        throw new Error('_buildOneStepURL: URL must match {host}/{pathname}?{query}');\n      }\n      var client = new ImgixClient(_objectSpread2({\n        domain: host\n      }, clientOptions));\n      return client.buildSrcSet(pathname, combinedParams, srcsetModifiers);\n    }\n\n    // returns an array of width values used during srcset generation\n  }, {\n    key: \"targetWidths\",\n    value: function targetWidths() {\n      var minWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      var maxWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8192;\n      var widthTolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.08;\n      var cache = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var minW = Math.floor(minWidth);\n      var maxW = Math.floor(maxWidth);\n      validateRange(minWidth, maxWidth);\n      validateWidthTolerance(widthTolerance);\n      var cacheKey = widthTolerance + '/' + minW + '/' + maxW;\n\n      // First, check the cache.\n      if (cacheKey in cache) {\n        return cache[cacheKey];\n      }\n      if (minW === maxW) {\n        return [minW];\n      }\n      var resolutions = [];\n      var currentWidth = minW;\n      while (currentWidth < maxW) {\n        // While the currentWidth is less than the maxW, push the rounded\n        // width onto the list of resolutions.\n        resolutions.push(Math.round(currentWidth));\n        currentWidth *= 1 + widthTolerance * 2;\n      }\n\n      // At this point, the last width in resolutions is less than the\n      // currentWidth that caused the loop to terminate. This terminating\n      // currentWidth is greater than or equal to the maxW. We want to\n      // to stop at maxW, so we make sure our maxW is larger than the last\n      // width in resolutions before pushing it (if it's equal we're done).\n      if (resolutions[resolutions.length - 1] < maxW) {\n        resolutions.push(maxW);\n      }\n      cache[cacheKey] = resolutions;\n      return resolutions;\n    }\n  }]);\n  return ImgixClient;\n}();\n\nexport { ImgixClient as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}