{"ast":null,"code":"function _objectEntries(obj) {\n  var entries = [];\n  var keys = Object.keys(obj);\n  for (var k = 0; k < keys.length; k++) entries.push([keys[k], obj[keys[k]]]);\n  return entries;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from \"react\";\nimport { PARAMS_EXP_MAP } from \"./constants\";\n\n/**\n * Creates a 1-step, or complete, URL from `domain` and `src` Strings.\n *\n * - First, the function checks if src has a defined `domain`. If it does, it\n * checks to see if `src` has a scheme, and prepends \"http\" or \"https\" as needed\n * - Otherwise, formatSrc formats `domain` and `src` Strings.\n *   - First it strips the two strings of the  leading and `/` or trailing `/`\n *     slash characters.\n *   - Then, it joins the two strings on a `/` character. IE,\n *    `strippedDomain + \"/\" + strippedSrc`.\n *   - If `domain` String argument `null` or `undefined`, the function returns\n *    the original `src` String.\n *\n * @param {String} src - URL that is either 1-step or 2-step\n * @param {String} domain - Domain string, optional\n * @returns 1-step, or complete, URL String. Ex, _assets.ix.net/foo/bar.jpg_\n */\nexport function formatSrc(src, domain) {\n  var useHTTPS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  // ignore if already has protocol\n  if (src.indexOf(\"://\") !== -1) {\n    return src;\n  } else {\n    // prepend domain if defined\n    if (domain == null) {\n      return src;\n    }\n    var strippedDomain = domain ? domain.replace(/^\\/|\\/$/g, \"\") : \"\";\n    var strippedSrc = src.replace(/^\\/|\\/$/g, \"\");\n    var prefix = useHTTPS ? \"https://\" : \"http://\";\n    return prefix + strippedDomain + \"/\" + strippedSrc;\n  }\n}\n\n/**\n * A function that formats the following values in the props Object:\n *\n * - `width`: if undefined or negative gets set to `undefined`.\n * - `height`: if undefined or negative gets set to `undefined`.\n * - `src`: concatenated to `domain` if `src` defined and has no domain.\n *\n * @param {Object} props\n * @returns A formatted `props` Object.\n */\nexport var formatProps = function formatProps(props) {\n  var width = !props.width || props.width <= 1 ? undefined : props.width;\n  var height = !props.height || props.height <= 1 ? undefined : props.height;\n  var src = props.src ? formatSrc(props.src, props.domain, props.useHttps) : undefined;\n  return _extends({}, props, {\n    width: width,\n    height: height,\n    src: src\n  });\n};\n\n/**\n * Function that shortens params keys according to the imgix spec.\n * @param {Object} params - imgixParams object\n * @returns imgixParams object with shortened keys\n * @see https://www.imgix.com/docs/reference\n */\nexport var collapseImgixParams = function collapseImgixParams(params) {\n  if (params == null) {\n    return params;\n  }\n  var compactedParams = {};\n  for (var _i = 0, _Object$entries = _objectEntries(params); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      k = _Object$entries$_i[0],\n      v = _Object$entries$_i[1];\n    if (PARAMS_EXP_MAP[k]) {\n      compactedParams[PARAMS_EXP_MAP[k]] = v;\n    } else {\n      compactedParams[k] = v;\n    }\n  }\n  return compactedParams;\n};\n\n/**\n * `processPropsHOF` takes a Component's props and formats them to adhere to the\n * ImgixClient's specifications.\n *\n * @param {React.Element<typeof Component>} Component - A react component with\n * defined `props`.\n * @returns A React Component who's `props` have been formatted and\n * `imgixParams` have been collapsed.\n */\nexport var processPropsHOF = function processPropsHOF(Component) {\n  return function (props) {\n    var formattedProps = formatProps(props);\n    var formattedImgixParams = collapseImgixParams(formattedProps.imgixParams);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, formattedProps, {\n      imgixParams: formattedImgixParams\n    }));\n  };\n};","map":{"version":3,"mappings":"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","names":["React","PARAMS_EXP_MAP","formatSrc","src","domain","useHTTPS","indexOf","strippedDomain","replace","strippedSrc","prefix","formatProps","props","width","undefined","height","useHttps","_extends","collapseImgixParams","params","compactedParams","_objectEntries","k","v","processPropsHOF","Component","formattedProps","formattedImgixParams","imgixParams"],"sources":["C:\\Users\\chels\\CS494\\Forms-of-Migration-Website\\node_modules\\react-imgix\\src\\HOFs\\propFormatter.js"],"sourcesContent":["import * as React from \"react\";\nimport { PARAMS_EXP_MAP } from \"./constants\";\n\n/**\n * Creates a 1-step, or complete, URL from `domain` and `src` Strings.\n *\n * - First, the function checks if src has a defined `domain`. If it does, it\n * checks to see if `src` has a scheme, and prepends \"http\" or \"https\" as needed\n * - Otherwise, formatSrc formats `domain` and `src` Strings.\n *   - First it strips the two strings of the  leading and `/` or trailing `/`\n *     slash characters.\n *   - Then, it joins the two strings on a `/` character. IE,\n *    `strippedDomain + \"/\" + strippedSrc`.\n *   - If `domain` String argument `null` or `undefined`, the function returns\n *    the original `src` String.\n *\n * @param {String} src - URL that is either 1-step or 2-step\n * @param {String} domain - Domain string, optional\n * @returns 1-step, or complete, URL String. Ex, _assets.ix.net/foo/bar.jpg_\n */\nexport function formatSrc(src, domain, useHTTPS = true) {\n  // ignore if already has protocol\n  if (src.indexOf(\"://\") !== -1) {\n    return src;\n  } else {\n    // prepend domain if defined\n    if (domain == null) {\n      return src;\n    }\n    const strippedDomain = domain ? domain.replace(/^\\/|\\/$/g, \"\") : \"\";\n    const strippedSrc = src.replace(/^\\/|\\/$/g, \"\");\n    const prefix = useHTTPS ? \"https://\" : \"http://\";\n    return prefix + strippedDomain + \"/\" + strippedSrc;\n  }\n}\n\n/**\n * A function that formats the following values in the props Object:\n *\n * - `width`: if undefined or negative gets set to `undefined`.\n * - `height`: if undefined or negative gets set to `undefined`.\n * - `src`: concatenated to `domain` if `src` defined and has no domain.\n *\n * @param {Object} props\n * @returns A formatted `props` Object.\n */\nexport const formatProps = (props) => {\n  const width = !props.width || props.width <= 1 ? undefined : props.width;\n  const height = !props.height || props.height <= 1 ? undefined : props.height;\n  const src = props.src\n    ? formatSrc(props.src, props.domain, props.useHttps)\n    : undefined;\n\n  return Object.assign({}, props, { width, height, src });\n};\n\n/**\n * Function that shortens params keys according to the imgix spec.\n * @param {Object} params - imgixParams object\n * @returns imgixParams object with shortened keys\n * @see https://www.imgix.com/docs/reference\n */\nexport const collapseImgixParams = (params) => {\n  if (params == null) {\n    return params;\n  }\n  const compactedParams = {};\n  for (const [k, v] of Object.entries(params)) {\n    if (PARAMS_EXP_MAP[k]) {\n      compactedParams[PARAMS_EXP_MAP[k]] = v;\n    } else {\n      compactedParams[k] = v;\n    }\n  }\n  return compactedParams;\n};\n\n/**\n * `processPropsHOF` takes a Component's props and formats them to adhere to the\n * ImgixClient's specifications.\n *\n * @param {React.Element<typeof Component>} Component - A react component with\n * defined `props`.\n * @returns A React Component who's `props` have been formatted and\n * `imgixParams` have been collapsed.\n */\nexport const processPropsHOF = (Component) => (props) => {\n  const formattedProps = formatProps(props);\n  const formattedImgixParams = collapseImgixParams(formattedProps.imgixParams);\n\n  return <Component {...formattedProps} imgixParams={formattedImgixParams} />;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}